<html>
	<head>
		<script language="javascript" type="text/javascript" src="Animator.js"></script>
		<script language="javascript" type="text/javascript" src="AnimationObject.js"></script>
		<script language="javascript" type="text/javascript" src="Util.js"></script>
		<style>
		
			.reverse
			{          
				-moz-transform: scaleX(-1);          
				-o-transform: scaleX(-1);          
				-webkit-transform: scaleX(-1);          
				transform: scaleX(-1);          
				filter: FlipH;          
				-ms-filter: "FlipH";  
			}
			
			body
			{
				background-image: url('darwins-arch-4241-1920x1080.jpg');
			}
		
		</style>
	</head>
	<body style="overflow:none">
		<!-- div id="div1" style="background-image:url(frame1.png); background-repeat:no-repeat; width:100px; height:100px"></div -->
		
		<!-- canvas width="1000" height="800" style="broder:solid red 3px" id="stage"></canvas -->
		
		<script>
			var test = new DisplayObject("test");
			test.aceleracaoX = 0;
			test.aceleracaoY = 0;
			test.power = 0;
			test.direction = "right";
			test.frameDelay = 3;
			test.animations = {};
			test.animations.run = 
			[
				"run_0.png", 
				"run_05.png", 
				"run_1.png", 
				"run_2.png", 
				"run_3.png", 
				"run_4.png"
			];
			test.animations.shoryuken = 
			[
				"shoryuken_1.png", 
				"shoryuken_2.png", 
				"shoryuken_3.png", 
				"shoryuken_4.png",
				"shoryuken_45.png",
				"shoryuken_5.png", 
				"shoryuken_6.png", 
				"shoryuken_65.png",
				{
					image: "shoryuken_7.png",
					action: function()
					{
						this.isAnimating = false;
					}
				}
			];
			test.animations.powerFire = 
			[
				"power_1.png", 
				"power_2.png", 
				"power_3.png", 
				"power_4.png",
				"power_5.png", 
				"power_6.png",
				{
					image: "power_7.png", 
					action: function() 
					{ 
						fire.call(this);
					}
				},
				"power_8.png", 
				{
					image: "none", 
					action: function() 
					{ 
						this.firing = false;
						this.isAnimating = false;
					}
				}
			];
			

			var speed = 2;
			
			function fire()
			{
				var right = this.direction == "right";
			
				var fireball = new DisplayObject();
				fireball.setFrames(["child_teste.png", "child_teste2.png", "child_teste3.png"]);
				fireball.x = this.x + (right ? this.width : -this.width);
				fireball.y = this.y + this.height / 2 - 20;
				
				fireball.explodeAnimation = 
				[
					"power_explode.png",
					"power_explode2.png",
					{
						image: "power_explode3.png",
						action: function()
						{
							root.removeChild(this.id);
						}
					}
				]
				
				fireball.onEnterFrame = function()
				{
					if (this.x <= 0)
					{
						this.x = 0;
						this.reverseAnimation = false;
						this.setFrames(this.explodeAnimation);
						this.frameDelay = 1;
						return;
					}
					else if (this.x + this.width >= window.innerWidth - 25)
					{
						this.x = window.innerWidth - this.width - 25;
						this.reverseAnimation = false;
						this.setFrames(this.explodeAnimation);
						this.frameDelay = 1;
						return;						
					}				
					
					this.x += right ? 25 : -25;
					if (!right) this.reverseImage = true;					
				}
				
				root.addChild(fireball);
			}

			test.onKeyDown = function(key)
			{				
				if (this.firing) return;
			
				if (!$key.isDown($key.SPACE))
				{
					this.isAnimating = true;
					
					if ($key.isDown($key.UP) && !this.jumping)
					{
						this.aceleracaoY = -20;
						this.jumping = true;
					}
						
					return;
				}
				
				this.firing = true;
				this.frameIndex = 0;
				this.reverseAnimation = false;
				this.setFrames(this.jumping ? this.animations.shoryuken : this.animations.powerFire);
				this.frameDelay = 1;
				
				if (this.jumping)
					this.aceleracaoY = -20;
				
				//this.aceleracaoX = 0;
				//this.aceleracaoY = 0;
			}
			
			test.onEnterFrame = function()
			{
				this.x += this.aceleracaoX;
				this.y += this.aceleracaoY;
			
				if ($key.isDown($key.RIGHT)) this.aceleracaoX += speed;
				if ($key.isDown($key.LEFT)) this.aceleracaoX -= speed;
				
				if (!this.firing)
				{
					this.setFrames(this.animations.run);
					var delayer = Math.max(Math.abs(this.aceleracaoX), Math.abs(this.aceleracaoY));
					this.frameDelay = (!delayer) ? 25 : Math.floor(speed / Math.max(delayer / 10, 1));
				}

				if (this.aceleracaoX > 0)
				{
					this.direction = "right";					
					this.reverseImage = false;
					this.aceleracaoX = Math.max(this.aceleracaoX - (!this.firing ? 1 : this.jumping ? 1 : 5), 0);
				}
				else if (this.aceleracaoX < 0)
				{
					this.direction = "left";
					this.reverseImage = true;
					this.aceleracaoX = Math.min(this.aceleracaoX + (!this.firing ? 1 : this.jumping ? 1 : 5), 0);
				}

				this.aceleracaoY += 2;
				
				if (Math.abs(this.aceleracaoY) > 100)
					this.aceleracaoY = this.aceleracaoY < 0 ? -100 : 100;
					
				if (this.y + this.height >= window.innerHeight - 20)
				{
					this.y = window.innerHeight - this.height - 20;
					this.aceleracaoY = 0;
					
					if (this.jumping && this.firing)	
					{					
						this.isAnimating = true;
						this.firing = false;
					}
					
					this.jumping = false;
				}
				
				if (this.x <= 0)
				{
					this.x = 0;
					this.aceleracaoX *= -1;
				}
				else if (this.x + this.width >= window.innerWidth - 1)
				{
					this.x = window.innerWidth - this.width - 1;
					this.aceleracaoX *= -1;				
				}				
				
				if (this.frameIndex == this.getFramesCount() - 1)
					this.reverseAnimation = true;
				else if (this.frameIndex == 0)
					this.reverseAnimation = false;
			}
			
			//var animator = new Animator(document.getElementById("stage"));
			var animator = new Animator(document.body);
			root.addChild(test);
			animator.start();
			
		</script>
		
	</body>
</html>